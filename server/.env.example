# Example environment variables for the server

# MongoDB connection string (예시)
# - 로컬 MongoDB가 27017에서 동작하면 아래처럼 사용합니다.
# - '/shopping'은 데이터베이스 이름입니다. 없으면 Mongo가 자동 생성합니다.
MONGO_URI=mongodb://localhost:27017/shopping

# 또는 Atlas (클라우드) 사용 예시:
# MONGO_URI="mongodb+srv://<username>:<password>@cluster0.xxxxxx.mongodb.net/shopping?retryWrites=true&w=majority"
# - Atlas를 사용할 경우 IP 화이트리스트에 본인 IP를 추가하거나 개발 중에는 0.0.0.0/0으로 열어야 접속됩니다.

# 서버 포트 (기본값 예시)
PORT=5001

# 인증 관련 (예시 값, 실제로는 안전한 값으로 변경하세요)
JWT_SECRET=replace_with_a_strong_secret
ACCESS_EXPIRES=15m
REFRESH_EXPIRES_SECONDS=604800

# 개발 편의: DB 연결 없이 서버를 띄우기
# - 로컬에 MongoDB가 없거나 연결 문제로 개발을 이어가야 할 때 사용합니다.
# - PowerShell에서: $env:SKIP_DB='1'; npm run dev

# 초보자용 빠른 해결 가이드 (요약)
# 1) 로컬 Mongo가 설치되어 있고 서비스로 등록된 경우(Windows):
#    관리자 권한 PowerShell에서 아래로 서비스 시작
#      Start-Service -Name MongoDB
#    서비스가 시작되면 서버를 다시 실행:
#      npm run dev
#    (권한 문제로 시작 실패하면 관리자 권한으로 PowerShell을 실행하세요.)

# 2) Docker가 설치되어 있다면(간단 추천):
#    PowerShell에서 실행:
#      docker run -d --name dev-mongo -p 27017:27017 -v C:\data\mongo\db:/data/db mongo:6
#    컨테이너 확인:
#      docker ps --filter "name=dev-mongo"
#    서버 재시작:
#      npm run dev
#    정리:
#      docker stop dev-mongo; docker rm dev-mongo

# 3) MongoDB Atlas(클라우드)를 사용하려면:
#    - Atlas에서 클러스터 생성 후 connection string을 복사해 MONGO_URI에 붙여넣으세요.
#    - Atlas 네트워크 설정에서 IP 화이트리스트를 허용(개발용으로 0.0.0.0/0 가능)하고 사용자 계정을 만드세요.
#    - .env 파일(이 예시는 .env.example)로 실제 값을 설정한 다음 서버 재시작.

# 4) 임시 회피 (백엔드가 DB 없이 동작하도록):
#    PowerShell에서:
#      $env:SKIP_DB='1'; npm run dev
#    이렇게 하면 DB 연결 시도를 건너뛰고 프론트엔드 개발을 계속할 수 있습니다.

# 서버 로그에서 주로 확인할 에러 문구 예시:
# - "connect ECONNREFUSED 127.0.0.1:27017"  => 로컬에 MongoDB가 실행 중이지 않음
# - "Authentication failed" => 사용자 이름/비밀번호 또는 인증 DB 설정 오류
# - "MongooseServerSelectionError" => 네트워크/DNS 문제 또는 Atlas 접속 문제

# 문제가 계속되면 서버(터미널)에서 띄운 전체 에러 로그를 복사해서 붙여 주세요. 정확한 원인을 바로 도와드리겠습니다.
